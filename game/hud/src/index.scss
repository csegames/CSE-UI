/**
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/

// font
@import './_cu-icons.scss';
@import './font';

html,
body {
  height: 100%;
  width: 100%;
  overflow: hidden;
  margin: 0;
  padding: 0;
  font-family: 'TitilliumWeb'
}

.chat-window {
  position: relative;
  overflow: hidden;
  display: block;
}

#hud {
  width: 100%;
  height: 100%;
  @import './_font.scss';

  // components
  @import './components/HUD/index';
  @import './components/HUDDrag/index';
  @import './components/Respawn/index';
  @import './components/Compass/index';
  @import './components/ErrorMessages/index';
  @import './components/PlotControl/index';
  @import './components/Announcement/index';
  @import './components/DevUI/index';
  // widgets
  @import './widgets/Building/index';
  // external scss
  @import '@csegames/cu-xmpp-chat/lib/index.scss';
  .chat-window {
    position: relative;
    overflow: hidden;
    display: block;
  }
  .click-effect {
    &:active {
      color: white;
      -webkit-animation: glow .2s ease-in-out infinite alternate;
      animation: glow .2s ease-in-out infinite alternate;
    }
  }

  .display-none {
    display: none;
  }

  .loading-spin {
    -webkit-animation: loading-spin 1s infinite;
    animation: loading-spin 1s infinite;
  }

  .map-tooltip {
    position: relative;
    padding: 1px 3px;
    background: rgba(0, 0, 0, 0.75);
    color: white;
    white-space: nowrap;
  }

  @-webkit-keyframes loading-spin {
    from {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    to {
      -webkit-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }

  @keyframes loading-spin {
    from {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    to {
      -webkit-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }

  @-webkit-keyframes glow {
    from {
      text-shadow: 0 0 2px #fff, 0 0 4px #fff, 0 0 6px #fff, 0 0 8px #f4d142, 0 0 14px #f4d142, 0 0 16px #f4d142;
    }
    to {
      text-shadow: 0 0 1px #efefef, 0 0 2px #efefef, 0 0 3px #efefef, 0 0 4px #f4d142, 0 0 7px #f4d142, 0 0 8px #f4d142;
    }
  }
  @keyframes glow {
    from {
      text-shadow: 0 0 2px #fff, 0 0 4px #fff, 0 0 6px #fff, 0 0 8px #f4d142, 0 0 14px #f4d142, 0 0 16px #f4d142;
    }
    to {
      text-shadow: 0 0 1px #efefef, 0 0 2px #efefef, 0 0 3px #efefef, 0 0 4px #f4d142, 0 0 7px #f4d142, 0 0 8px #f4d142;
    }
  }

  @mixin shake($x, $y, $rot, $name, $steps:10, $opacity:false) {
    $r:0deg;
    $h:0px;
    $v:0px; 
    
    $interval: $steps;
    $step: 0%;
  
    @keyframes #{$name}{ 
      @while $step < 100% {
        @if ($rot != 0deg){ $r : random($rot) - $rot/2;} 
          @else {$r : 0deg;}
        @if ($x != 0px){ $h : random($x) - $x/2; } 
          @else { $h : 0px; }
        @if ($y != 0px){ $v : random($y) - $y/2; } 
          @else { $v : 0px; }
      
        @if($step == 0%){
          #{$step} {
            transform: translate(0px, 0px) rotate(0deg);
            @if($opacity){
              opacity: random(10)*.1;
            }
          }  
        } @else {
          #{$step} {
            transform: translate($h, $v) rotate($r);
            @if($opacity){
              opacity: random(10)*.1; 
            }
          }
        }
        $step: $step + $interval;
      }
  
    }
  }
  
  @include shake(20px, 20px, 5deg, 'shake-hard', 3);
  

  a {
    text-decoration: none;
    color: darken(#3fd0b0, 10%);
    transition: all 0.3s;
    &:hover {
      color: lighten(#3fd0b0, 10%);
    }
  }
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
}
